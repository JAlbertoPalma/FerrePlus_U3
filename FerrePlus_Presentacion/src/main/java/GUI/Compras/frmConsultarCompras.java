/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.Compras;

import modulo.inventario.*;
import Control.ControlGUI;
import DTO.CompraDTO;
import DTO.DetalleCompraDTO;
import DTO.ProductoDTO;
import excepciones.NegocioException;
import excepciones.PersistenciaException;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.Toolkit;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author joelr
 */
public class frmConsultarCompras extends javax.swing.JFrame {

    GridBagConstraints gbc = new GridBagConstraints();
    List<ProductoDTO> productos;
    int aux = 1; //Auxiliar requerido para los botones siguiente y atras de Compras.
    int index = 1; //Define en que pagina se encuentra la tabla de Compras.
    int min = 1; // El minimo de la lista de productos, requerido para el boton atras de Compras.
    int max = 0; // El maximo de la lista de productos, requerido para el boton siguiente de Compras.
    int aux2 = 1; //Auxiliar requerido para los botones siguiente y atras de Detalles.
    int index2 = 1; //Define en que pagina se encuentra la tabla de Detalles.
    int min2 = 1; // El minimo de la lista de productos, requerido para el boton atras de Detalles.
    int max2 = 0; // El maximo de la lista de productos, requerido para el boton siguiente de Detalles.

    /**
     * Creates new form RegistrarProductoGUI
     */
    public frmConsultarCompras() throws NegocioException {
        initComponents();
        this.setExtendedState(frmConsultarCompras.MAXIMIZED_BOTH);
        this.AcomodarContenido();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFondo = new javax.swing.JPanel();
        jButtonVolver = new javax.swing.JButton();
        lblNombreProducto = new javax.swing.JLabel();
        jScrollPaneCompras = new javax.swing.JScrollPane();
        jTableCompras = new javax.swing.JTable();
        txtNombreProducto = new javax.swing.JTextField();
        lblFechaInicio = new javax.swing.JLabel();
        datePickerInicio = new com.github.lgooddatepicker.components.DatePicker();
        lblFechaFin = new javax.swing.JLabel();
        datePickerFin = new com.github.lgooddatepicker.components.DatePicker();
        lblProveedor = new javax.swing.JLabel();
        txtProveedor = new javax.swing.JTextField();
        jButtonFiltrar = new javax.swing.JButton();
        jButtonAtras = new javax.swing.JButton();
        jButtonSiguiente = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProductosCompras = new javax.swing.JTable();
        jButtonSiguiente2 = new javax.swing.JButton();
        jButtonAtras2 = new javax.swing.JButton();
        pnlTitulo = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlFondo.setBackground(new java.awt.Color(255, 204, 204));
        pnlFondo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlFondoMouseClicked(evt);
            }
        });
        pnlFondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonVolver.setText("Volver");
        jButtonVolver.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonVolver.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButtonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverActionPerformed(evt);
            }
        });
        pnlFondo.add(jButtonVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 580, 130, 40));

        lblNombreProducto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNombreProducto.setText("Nombre Producto: ");
        lblNombreProducto.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        pnlFondo.add(lblNombreProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 480, 210, -1));

        jTableCompras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Folio", "Fecha", "Proveedor", "Subtotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableCompras.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTableComprasFocusLost(evt);
            }
        });
        jTableCompras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableComprasMouseClicked(evt);
            }
        });
        jScrollPaneCompras.setViewportView(jTableCompras);
        if (jTableCompras.getColumnModel().getColumnCount() > 0) {
            jTableCompras.getColumnModel().getColumn(0).setResizable(false);
            jTableCompras.getColumnModel().getColumn(1).setResizable(false);
            jTableCompras.getColumnModel().getColumn(2).setResizable(false);
            jTableCompras.getColumnModel().getColumn(3).setResizable(false);
        }

        pnlFondo.add(jScrollPaneCompras, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 890, -1));

        txtNombreProducto.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNombreProducto.setPreferredSize(new java.awt.Dimension(200, 50));
        pnlFondo.add(txtNombreProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 490, 190, 22));

        lblFechaInicio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFechaInicio.setText("Fecha Inicio:");
        lblFechaInicio.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblFechaInicio.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pnlFondo.add(lblFechaInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 560, 170, -1));
        pnlFondo.add(datePickerInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 570, -1, -1));

        lblFechaFin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFechaFin.setText("Fecha Fin:");
        lblFechaFin.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblFechaFin.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pnlFondo.add(lblFechaFin, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 600, 170, -1));
        pnlFondo.add(datePickerFin, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 610, -1, -1));

        lblProveedor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblProveedor.setText("Proveedor: ");
        lblProveedor.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        pnlFondo.add(lblProveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 510, 210, -1));

        txtProveedor.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtProveedor.setPreferredSize(new java.awt.Dimension(200, 50));
        pnlFondo.add(txtProveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 520, 190, 22));

        jButtonFiltrar.setText("Filtrar");
        jButtonFiltrar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonFiltrar.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButtonFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFiltrarActionPerformed(evt);
            }
        });
        pnlFondo.add(jButtonFiltrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 530, 130, 40));

        jButtonAtras.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButtonAtras.setText("Atras");
        jButtonAtras.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtrasActionPerformed(evt);
            }
        });
        pnlFondo.add(jButtonAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 630, 130, 40));

        jButtonSiguiente.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButtonSiguiente.setText("Siguiente");
        jButtonSiguiente.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSiguienteActionPerformed(evt);
            }
        });
        pnlFondo.add(jButtonSiguiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 630, 130, 40));

        jTableProductosCompras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre", "Cantidad", "Total", "FolioCompra"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableProductosCompras);

        pnlFondo.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 690, -1, -1));

        jButtonSiguiente2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButtonSiguiente2.setText("Siguiente");
        jButtonSiguiente2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonSiguiente2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSiguiente2ActionPerformed(evt);
            }
        });
        pnlFondo.add(jButtonSiguiente2, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 650, 130, 40));

        jButtonAtras2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButtonAtras2.setText("Atras");
        jButtonAtras2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonAtras2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtras2ActionPerformed(evt);
            }
        });
        pnlFondo.add(jButtonAtras2, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 650, 130, 40));

        getContentPane().add(pnlFondo, java.awt.BorderLayout.CENTER);

        pnlTitulo.setBackground(new java.awt.Color(102, 51, 0));
        pnlTitulo.setDoubleBuffered(false);
        pnlTitulo.setPreferredSize(new java.awt.Dimension(400, 105));
        pnlTitulo.setLayout(new java.awt.GridBagLayout());

        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("Consultar Compras");
        lblTitulo.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 36)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));
        pnlTitulo.add(lblTitulo, new java.awt.GridBagConstraints());

        getContentPane().add(pnlTitulo, java.awt.BorderLayout.PAGE_START);
        pnlTitulo.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverActionPerformed

        ControlGUI.getInstancia().mostrarMenuCompras();
        this.dispose();


    }//GEN-LAST:event_jButtonVolverActionPerformed

    private void jTableComprasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableComprasMouseClicked

    }//GEN-LAST:event_jTableComprasMouseClicked

    private void jTableComprasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTableComprasFocusLost

    }//GEN-LAST:event_jTableComprasFocusLost

    private void pnlFondoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlFondoMouseClicked

    }//GEN-LAST:event_pnlFondoMouseClicked

    private void jButtonFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFiltrarActionPerformed
        try {
            this.LlenarTablaFiltro(this.datePickerInicio.getDate(), this.datePickerFin.getDate(), this.txtProveedor.getText(), this.txtNombreProducto.getText());
            this.LlenarTablaDetallesFiltro(this.datePickerInicio.getDate(), this.datePickerFin.getDate(), this.txtProveedor.getText(), this.txtNombreProducto.getText());
        } catch (NegocioException ex) {
            JOptionPane.showMessageDialog(rootPane, "No se encontro ninguna compra");

            Logger.getLogger(frmConsultarCompras.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonFiltrarActionPerformed

    private void jButtonAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtrasActionPerformed
        index--;
        aux = aux - 8;
        try {
            this.LlenarTablaFiltro(this.datePickerInicio.getDate(), this.datePickerFin.getDate(), this.txtProveedor.getText(), this.txtNombreProducto.getText());
        } catch (NegocioException ex) {
            Logger.getLogger(frmConsultarCompras.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonAtrasActionPerformed

    private void jButtonSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSiguienteActionPerformed
        index++;
        aux = aux + 8;

        try {
            this.LlenarTablaFiltro(this.datePickerInicio.getDate(), this.datePickerFin.getDate(), this.txtProveedor.getText(), this.txtNombreProducto.getText());
        } catch (NegocioException ex) {
            Logger.getLogger(frmConsultarCompras.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButtonSiguienteActionPerformed

    private void jButtonSiguiente2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSiguiente2ActionPerformed
        index2++;
        aux2 = aux2 + 8;
        try {
            this.LlenarTablaDetallesFiltro(this.datePickerInicio.getDate(), this.datePickerFin.getDate(), this.txtProveedor.getText(), this.txtNombreProducto.getText());
        } catch (NegocioException ex) {
            Logger.getLogger(frmConsultarCompras.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonSiguiente2ActionPerformed

    private void jButtonAtras2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtras2ActionPerformed
        index2--;
        aux2 = aux2 - 8;
        try {
            this.LlenarTablaDetallesFiltro(this.datePickerInicio.getDate(), this.datePickerFin.getDate(), this.txtProveedor.getText(), this.txtNombreProducto.getText());
        } catch (NegocioException ex) {
            Logger.getLogger(frmConsultarCompras.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonAtras2ActionPerformed
    private void AcomodarContenido() throws NegocioException {

        this.pnlFondo.setLayout(new GridBagLayout()); // Permite centrar componentes dentro

        gbc.gridy = 0; // Todos estarán en la misma fila (fila 0), se incrementa para mover a la siguiente fila.
        gbc.insets = new Insets(5, 5, 5, 5); // Margen alrededor del componente
        gbc.fill = GridBagConstraints.HORIZONTAL; // Centrado en la celda
        gbc.weightx = 1.0; // Espacio extra para centrar horizontalmente

        // Columna 1
        gbc.gridx = 1;
        gbc.gridy = 0;
//        gbc.fill = GridBagConstraints.BOTH; // Alarga la tabla con el tamaño.
        this.jTableCompras.setModel(this.LlenarTablaInicial());
        this.jTableProductosCompras.setModel(this.LlenarTablaDetallesInicial());
        JTableHeader header = new JTableHeader(this.jTableCompras.getColumnModel());

        this.pnlFondo.add(header, gbc);
        gbc.gridy++;
        this.pnlFondo.add(this.jTableCompras, gbc);
        this.jTableCompras.setPreferredSize(new Dimension(750, 750));
        gbc.gridy++;
        this.pnlFondo.add(this.jButtonAtras, gbc);
        gbc.gridy++;
        this.pnlFondo.add(this.jButtonSiguiente, gbc);
        gbc.gridy++;
        JTableHeader header2 = new JTableHeader(this.jTableProductosCompras.getColumnModel());
        this.pnlFondo.add(header2,gbc);
        gbc.gridy++;
        this.pnlFondo.add(this.jTableProductosCompras, gbc);
        this.jTableProductosCompras.setPreferredSize(new Dimension(750, 750));
        gbc.gridy++;
        this.pnlFondo.add(this.jButtonAtras2, gbc);
        gbc.gridy++;
        this.pnlFondo.add(this.jButtonSiguiente2, gbc);
        gbc.gridy++;

//         Columna 2
        gbc.gridx = 2;
        gbc.gridy = 0;
        this.pnlFondo.add(this.lblNombreProducto, gbc);
        gbc.gridy++;
        this.pnlFondo.add(this.txtNombreProducto, gbc);
        gbc.gridy++;
        this.pnlFondo.add(this.lblProveedor, gbc);
        gbc.gridy++;
        this.pnlFondo.add(this.txtProveedor, gbc);
        gbc.gridy++;
        this.pnlFondo.add(this.lblFechaInicio, gbc);
        gbc.gridy++;
        this.pnlFondo.add(this.datePickerInicio, gbc);
        gbc.gridy++;
        this.pnlFondo.add(this.lblFechaFin, gbc);
        gbc.gridy++;
        this.pnlFondo.add(this.datePickerFin, gbc);
        gbc.gridy++;
        this.pnlFondo.add(this.jButtonFiltrar, gbc);
        gbc.gridy++;
        this.pnlFondo.add(this.jButtonVolver, gbc);
        gbc.gridy++;

    }

    public int contarPaginas(int nPaginas) {
        int totalPaginas = (int) Math.ceil((double) nPaginas / 8);
        return totalPaginas;
    }

    // Metodo para llenar la tabla de Compras al iniciar.
    public DefaultTableModel LlenarTablaInicial() throws NegocioException {

        DefaultTableModel model = (DefaultTableModel) this.jTableCompras.getModel();
        model.setRowCount(0); // Limpiar todas las filas existentes en la tabla
        for (int i = 0; i < 5; i++) {
            model.addRow(new Object[]{
                "Busque",
                "Algo",
                "Para mostrarlo",
                0.0});
        }
        return model;
    }

    // Metodo para llenar la tabla de DetallesCompras al iniciar.
    public DefaultTableModel LlenarTablaDetallesInicial() throws NegocioException {

        DefaultTableModel model = (DefaultTableModel) this.jTableProductosCompras.getModel();
        model.setRowCount(0); // Limpiar todas las filas existentes en la tabla
        for (int i = 0; i < 5; i++) {
            model.addRow(new Object[]{
                "Busque",
                0,
                0.0,
                "Algo"});
        }
        return model;
    }

    // Metodo para llenar la tabla de compras.
    public DefaultTableModel LlenarTablaFiltro(LocalDate fechaInicio, LocalDate fechaFin, String proveedor, String nombreProducto) throws NegocioException {
        max = this.contarPaginas(ControlGUI.getInstancia().comprasFiltro(fechaInicio, fechaFin, proveedor, nombreProducto).size());
        List<CompraDTO> comprasObtenidas = this.calcularFiltros(fechaInicio, fechaFin, proveedor, nombreProducto);
        this.ocultarBotones();
        //Tabla
        DefaultTableModel model = (DefaultTableModel) this.jTableCompras.getModel();
        model.setRowCount(0); // Limpiar todas las filas existentes en la tabla

        try {
            for (int i = 0; i < comprasObtenidas.size(); i++) {
                CompraDTO compra = comprasObtenidas.get(i);
                model.addRow(new Object[]{
                    compra.getFolio(),
                    compra.getFecha(),
                    compra.getProveedor(),
                    compra.getTotal()
                });
                
            }
            return model;
        } catch (NullPointerException np) {
            JOptionPane.showMessageDialog(rootPane, "No se encontro ninguna compra");
            throw new NullPointerException("No se encontro ninguna compra");
        }

    }

    // Metodo para llenar la tabla de compras.
    public DefaultTableModel LlenarTablaDetallesFiltro(LocalDate fechaInicio, LocalDate fechaFin, String proveedor, String nombreProducto) throws NegocioException {
        int conteo = 0;
        List<DetalleCompraDTO> detalles = new ArrayList<>();
        DefaultTableModel model = (DefaultTableModel) this.jTableProductosCompras.getModel();
        model.setRowCount(0); // Limpiar todas las filas existentes en la tabla
        List<CompraDTO> comprasObtenidas = this.calcularFiltros(fechaInicio, fechaFin, proveedor, nombreProducto);
        for (int i = 0; i < comprasObtenidas.size(); i++) {
            for (int j = 0; j < comprasObtenidas.get(i).getDetalles().size(); j++) {
                DetalleCompraDTO detalle = comprasObtenidas.get(i).getDetalles().get(j);
                detalles.add(detalle);
            }
        }
        max2 = this.contarPaginas(detalles.size());
        this.ocultarBotones2();
        List<DetalleCompraDTO> detallesFiltrados = this.calcularDetallesFiltros(detalles);
        
        for (int i = 0; i < detallesFiltrados.size(); i++) {
            String nombreAux="";
            if (ControlGUI.getInstancia().obtenerProductoPorID(detallesFiltrados.get(i).getIdProducto()) == null) {
                nombreAux = "No especificado";
            }else{
                nombreAux = ControlGUI.getInstancia().obtenerProductoPorID(detallesFiltrados.get(i).getIdProducto()).getNombre();
            }
            model.addRow(new Object[]{
                    nombreAux,
                    detallesFiltrados.get(i).getCantidad(),
                    detallesFiltrados.get(i).getSubtotal(),
                    comprasObtenidas.get(i).getFolio()
                });
        }
        return null;
    }

    public void ocultarBotones() {

        if (index == max) {
            this.jButtonSiguiente.setVisible(false);

        } else {
            this.jButtonSiguiente.setVisible(true);

        }

        if (index == min) {
            this.jButtonAtras.setVisible(false);

        } else {
            this.jButtonAtras.setVisible(true);

        }
    }

    public void ocultarBotones2() {

        if (index2 == max2) {
            this.jButtonSiguiente2.setVisible(false);

        } else {
            this.jButtonSiguiente2.setVisible(true);

        }

        if (index2 == min2) {
            this.jButtonAtras2.setVisible(false);

        } else {
            this.jButtonAtras2.setVisible(true);
        }
    }

    public List<CompraDTO> calcularFiltros(LocalDate fechaInicio, LocalDate fechaFin, String proveedor, String nombreProducto) throws NegocioException {
        List<CompraDTO> comprasObtenidasFiltro = ControlGUI.getInstancia().comprasFiltro(fechaInicio, fechaFin, proveedor, nombreProducto);
        List<CompraDTO> detalles = new ArrayList<>();
        try {
            detalles.add(comprasObtenidasFiltro.get(aux - 1));
            detalles.add(comprasObtenidasFiltro.get(aux));
            detalles.add(comprasObtenidasFiltro.get(aux + 1));
            detalles.add(comprasObtenidasFiltro.get(aux + 2));
            detalles.add(comprasObtenidasFiltro.get(aux + 3));
            detalles.add(comprasObtenidasFiltro.get(aux + 4));
            detalles.add(comprasObtenidasFiltro.get(aux + 5));
            detalles.add(comprasObtenidasFiltro.get(aux + 6));
        } catch (IndexOutOfBoundsException e) {
            throw new IndexOutOfBoundsException("Se paso del rango pero no pasa nada :D ");

        } finally {
            return detalles;
        }

    }
    public List<DetalleCompraDTO> calcularDetallesFiltros(List<DetalleCompraDTO> lista) throws NegocioException {
        List<DetalleCompraDTO> detalles = new ArrayList<>();
        try {
            detalles.add(lista.get(aux2 - 1));
            detalles.add(lista.get(aux2));
            detalles.add(lista.get(aux2 + 1));
            detalles.add(lista.get(aux2 + 2));
            detalles.add(lista.get(aux2 + 3));
            detalles.add(lista.get(aux2 + 4));
            detalles.add(lista.get(aux2 + 5));
            detalles.add(lista.get(aux2 + 6));
        } catch (IndexOutOfBoundsException e) {
            throw new IndexOutOfBoundsException("Se paso del rango pero no pasa nada :D ");

        } finally {
            return detalles;
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmConsultarCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmConsultarCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmConsultarCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmConsultarCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new frmConsultarCompras().setVisible(true);
                } catch (NegocioException ex) {
                    Logger.getLogger(frmConsultarCompras.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.github.lgooddatepicker.components.DatePicker datePickerFin;
    private com.github.lgooddatepicker.components.DatePicker datePickerInicio;
    private javax.swing.JButton jButtonAtras;
    private javax.swing.JButton jButtonAtras2;
    private javax.swing.JButton jButtonFiltrar;
    private javax.swing.JButton jButtonSiguiente;
    private javax.swing.JButton jButtonSiguiente2;
    private javax.swing.JButton jButtonVolver;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPaneCompras;
    private javax.swing.JTable jTableCompras;
    private javax.swing.JTable jTableProductosCompras;
    private javax.swing.JLabel lblFechaFin;
    private javax.swing.JLabel lblFechaInicio;
    private javax.swing.JLabel lblNombreProducto;
    private javax.swing.JLabel lblProveedor;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JPanel pnlFondo;
    private javax.swing.JPanel pnlTitulo;
    private javax.swing.JTextField txtNombreProducto;
    private javax.swing.JTextField txtProveedor;
    // End of variables declaration//GEN-END:variables

}
