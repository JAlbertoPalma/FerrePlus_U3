/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.Ventas;

import GUI.Compras.*;
import modulo.inventario.*;
import Control.ControlGUI;
import DTO.DetalleVentaDTO;
import DTO.ProductoDTO;
import DTO.VentaDTO;
import excepciones.NegocioException;
import excepciones.PersistenciaException;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.Toolkit;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author joelr
 */
public class frmRegistrarVenta extends javax.swing.JFrame {

    GridBagConstraints gbc = new GridBagConstraints();
    int aux = 0;
    int fila = 0;
    List<ProductoDTO> productos;
    List<Double> lista;
    VentaDTO venta;
    double total;
    int index = 0;

    /**
     * Creates new form RegistrarProductoGUI
     */
    public frmRegistrarVenta() throws NegocioException {
        initComponents();
        this.setExtendedState(frmRegistrarVenta.MAXIMIZED_BOTH);
        this.AcomodarContenido();
        lista = new ArrayList<>();
        productos = new ArrayList<>();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFondo = new javax.swing.JPanel();
        jButtonVolver = new javax.swing.JButton();
        lblTotal = new javax.swing.JLabel();
        jScrollPaneProductos = new javax.swing.JScrollPane();
        jTableVentas = new javax.swing.JTable();
        lblFechaVenta = new javax.swing.JLabel();
        jButtonEliminar = new javax.swing.JButton();
        jButtonConfirmar = new javax.swing.JButton();
        jButtonAgregar = new javax.swing.JButton();
        lblTotalVenta = new javax.swing.JLabel();
        dateTimePickerVenta = new com.github.lgooddatepicker.components.DateTimePicker();
        pnlTitulo = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlFondo.setBackground(new java.awt.Color(204, 255, 204));
        pnlFondo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlFondoMouseClicked(evt);
            }
        });
        pnlFondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonVolver.setText("Volver");
        jButtonVolver.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonVolver.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButtonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverActionPerformed(evt);
            }
        });
        pnlFondo.add(jButtonVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 580, 130, 40));

        lblTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTotal.setText("Total");
        lblTotal.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        pnlFondo.add(lblTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 480, 100, -1));

        jTableVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "SKU", "Nombre", "Cantidad", "PrecioVenta", "CalculoVenta", "Descuentos", "Subtotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableVentas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTableVentasFocusLost(evt);
            }
        });
        jTableVentas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableVentasMouseClicked(evt);
            }
        });
        jScrollPaneProductos.setViewportView(jTableVentas);
        if (jTableVentas.getColumnModel().getColumnCount() > 0) {
            jTableVentas.getColumnModel().getColumn(0).setResizable(false);
            jTableVentas.getColumnModel().getColumn(1).setResizable(false);
            jTableVentas.getColumnModel().getColumn(2).setResizable(false);
            jTableVentas.getColumnModel().getColumn(3).setResizable(false);
            jTableVentas.getColumnModel().getColumn(4).setResizable(false);
            jTableVentas.getColumnModel().getColumn(5).setResizable(false);
            jTableVentas.getColumnModel().getColumn(6).setResizable(false);
        }

        pnlFondo.add(jScrollPaneProductos, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 890, -1));

        lblFechaVenta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFechaVenta.setText("Fecha Venta:");
        lblFechaVenta.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblFechaVenta.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pnlFondo.add(lblFechaVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 520, 170, -1));

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonEliminar.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });
        pnlFondo.add(jButtonEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 580, 130, 40));

        jButtonConfirmar.setText("Confirmar");
        jButtonConfirmar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonConfirmar.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButtonConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmarActionPerformed(evt);
            }
        });
        pnlFondo.add(jButtonConfirmar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 530, 130, 40));

        jButtonAgregar.setText("Agregar Producto");
        jButtonAgregar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonAgregar.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButtonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarActionPerformed(evt);
            }
        });
        pnlFondo.add(jButtonAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 530, 130, 40));

        lblTotalVenta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTotalVenta.setText("Total Venta:");
        lblTotalVenta.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        pnlFondo.add(lblTotalVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 480, 170, -1));
        pnlFondo.add(dateTimePickerVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 560, -1, -1));

        getContentPane().add(pnlFondo, java.awt.BorderLayout.CENTER);

        pnlTitulo.setBackground(new java.awt.Color(51, 102, 0));
        pnlTitulo.setDoubleBuffered(false);
        pnlTitulo.setPreferredSize(new java.awt.Dimension(400, 105));
        pnlTitulo.setLayout(new java.awt.GridBagLayout());

        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("Registrar Venta");
        lblTitulo.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 36)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));
        pnlTitulo.add(lblTitulo, new java.awt.GridBagConstraints());

        getContentPane().add(pnlTitulo, java.awt.BorderLayout.PAGE_START);
        pnlTitulo.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverActionPerformed
        ControlGUI.getInstancia().mostrarMenuVentas();
        this.dispose();


    }//GEN-LAST:event_jButtonVolverActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
//        if (aux == 0) {
//
//            this.jButtonConfirmar.setText("Eliminar");
//            this.jButtonEliminar.setVisible(true);
//            String id = Integer.toString(fila);
//            System.out.println(id);
//            try {
//                String nombre = this.jTableProductos.getValueAt(fila, 1).toString();
//                System.out.println(nombre);
//                ControlGUI.getInstancia().EliminarProducto(ControlGUI.getInstancia().obtenerProductoPorNombre(nombre).getId());
//                JOptionPane.showMessageDialog(rootPane, "Registro Eliminado con exito");
//            } catch (NegocioException | PersistenciaException ex) {
//                Logger.getLogger(frmComprasRegistradas.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        }


    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmarActionPerformed
        if (ControlGUI.getInstancia().obtenerDetallesVenta() == null || ControlGUI.getInstancia().obtenerDetallesVenta().isEmpty()) {
            JOptionPane.showMessageDialog(this, "No puede registrar una venta sin productos", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                VentaDTO ventaHecha = ControlGUI.getInstancia().registrarVenta(ControlGUI.getInstancia().crearVentaDTO(
                        ControlGUI.getInstancia().obtenerDetallesVenta(),
                        true, 
                        LocalDateTime.now(),
//                        this.dateTimePickerVenta.getDateTimePermissive(), 
                        total));
                
                boolean cuco = ControlGUI.getInstancia().actualizarResumenCaja(ControlGUI.getInstancia().getSesionCajaActiva().getId(), 
                                                        ventaHecha.getTotal(), 
                                                        ControlGUI.getInstancia().obtenerDetallesVenta().size());
                if(!cuco){
                    JOptionPane.showMessageDialog(this, "No se actualizó el resumen de la caja :(", "Error", JOptionPane.ERROR_MESSAGE);
                }
                JOptionPane.showMessageDialog(this, "Se creó la venta con folio: " + ventaHecha.getFolio(), "Operación exitosa", JOptionPane.INFORMATION_MESSAGE);
            } catch (NegocioException ex) {
                Logger.getLogger(frmRegistrarVenta.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jButtonConfirmarActionPerformed

    private void jButtonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarActionPerformed
        try {
            ControlGUI.getInstancia().mostrarProductosRegistrados(1);
            this.setVisible(false);
        } catch (NegocioException ex) {
            Logger.getLogger(frmRegistrarVenta.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButtonAgregarActionPerformed

    private void jTableVentasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableVentasMouseClicked

        fila = this.jTableVentas.getSelectedRow();
        this.jButtonEliminar.setVisible(true);
    }//GEN-LAST:event_jTableVentasMouseClicked

    private void jTableVentasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTableVentasFocusLost

    }//GEN-LAST:event_jTableVentasFocusLost

    private void pnlFondoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlFondoMouseClicked
        if (fila >= 0) {
            this.jButtonEliminar.setVisible(false);

        }
    }//GEN-LAST:event_pnlFondoMouseClicked
    private void AcomodarContenido() throws NegocioException {

        this.pnlFondo.setLayout(new GridBagLayout()); // Permite centrar componentes dentro

        gbc.gridy = 0; // Todos estarán en la misma fila (fila 0), se incrementa para mover a la siguiente fila.
        gbc.insets = new Insets(5, 5, 5, 5); // Margen alrededor del componente
        gbc.fill = GridBagConstraints.HORIZONTAL; // Centrado en la celda
        gbc.weightx = 1.0; // Espacio extra para centrar horizontalmente

        // Columna 1
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH; // Alarga la tabla con el tamaño.
        this.jTableVentas.setModel(this.inicial());
        JTableHeader header = new JTableHeader(this.jTableVentas.getColumnModel());
        this.pnlFondo.add(header, gbc);
        gbc.gridy++;
        this.pnlFondo.add(this.jTableVentas, gbc);
        this.jTableVentas.setPreferredSize(new Dimension(750, 750));
        gbc.gridy++;

//         Columna 2
        gbc.gridx = 2;
        gbc.gridy = 0;
        this.pnlFondo.add(this.lblTotalVenta, gbc);
        gbc.gridy++;
        this.pnlFondo.add(this.lblTotal, gbc);
        gbc.gridy++;
        this.pnlFondo.add(this.lblTotal, gbc);
        gbc.gridy++;
        this.pnlFondo.add(this.lblFechaVenta, gbc);
        gbc.gridy++;
        this.pnlFondo.add(this.dateTimePickerVenta, gbc);
        gbc.gridy++;
        this.pnlFondo.add(this.jButtonAgregar, gbc);
        gbc.gridy++;
        this.pnlFondo.add(this.jButtonConfirmar, gbc);
        gbc.gridy++;
        this.pnlFondo.add(this.jButtonEliminar, gbc);
        gbc.gridy++;
        this.jButtonEliminar.setVisible(false);
        this.pnlFondo.add(this.jButtonVolver, gbc);
        gbc.gridy++;

    }

    public int contarPaginas(int nPaginas) {
        int totalPaginas = (int) Math.ceil((double) nPaginas / 8);
        return totalPaginas;
    }

    // Metodo para llenar la tabla de Productos.
    public DefaultTableModel LlenarTablaProductos() throws NegocioException {
        String id;
        List<DetalleVentaDTO> ventas = ControlGUI.getInstancia().obtenerDetallesVenta();
        DefaultTableModel model = (DefaultTableModel) this.jTableVentas.getModel();
//        max = this.contarPaginas(ControlGUI.getInstancia().ObtenerProductos().size());
        //Tabla
        try {
            model.setRowCount(0); // Limpiar todas las filas existentes en la tabla
            for (int i = 0; i < ventas.size(); i++) {
                double calculoVenta = ventas.get(i).getCantidad() * ControlGUI.getInstancia().obtenerProductoPorID(ventas.get(i).getIdProducto()).getPrecioVenta();
                double subtotal = calculoVenta - ventas.get(i).getDescuento();
                model.addRow(new Object[]{
                    ControlGUI.getInstancia().obtenerProductoPorID(ventas.get(i).getIdProducto()).getSKU(), //Sku
                    ControlGUI.getInstancia().obtenerProductoPorID(ventas.get(i).getIdProducto()).getNombre(), //Nombre
                    ventas.get(i).getCantidad(), //Cantidad 
                    ControlGUI.getInstancia().obtenerProductoPorID(ventas.get(i).getIdProducto()).getPrecioVenta(), // PrecioVenta
                    calculoVenta, //CalculoVenta
                    ventas.get(i).getDescuento(), //Descuento
                    subtotal
                });
            }
        } catch (NullPointerException np) {
            model.setRowCount(0); // Limpiar todas las filas existentes en la tabla
            for (int i = 0; i < 5; i++) {
                model.addRow(new Object[]{
                    "No registrado",
                    "No registrado",
                    0.0,
                    0.0,
                    0.0,});
            }
        }
        return model;
    }

    public DefaultTableModel inicial() {
        DefaultTableModel model = (DefaultTableModel) this.jTableVentas.getModel();
        model.setRowCount(0); // Limpiar todas las filas existentes en la tabla
        for (int i = 0; i < 5; i++) {
            model.addRow(new Object[]{
                "No registrado",
                "No registrado",
                0.0,
                0.0,
                0.0,});
        }
         return model;
    }

//    public void añadirProducto() throws NegocioException {
//
//        List<Double> lista = ControlGUI.getInstancia().obtenerDoublesAuxiliares();
//
//        this.lista.add(lista.get(0));
//        this.lista.add(lista.get(1));
//        this.lista.add(lista.get(2));
//        this.lista.add(lista.get(3));
//        this.total = total + lista.get(3);
//        this.lblTotal.setText(String.valueOf(total));
//        productos.add(ControlGUI.getInstancia().obtenerProductoPorID(ControlGUI.getInstancia().obtenerProductoAux().getId()));
//
//    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmRegistrarVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmRegistrarVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmRegistrarVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmRegistrarVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new frmRegistrarVenta().setVisible(true);
                } catch (NegocioException ex) {
                    Logger.getLogger(frmRegistrarVenta.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.github.lgooddatepicker.components.DateTimePicker dateTimePickerVenta;
    private javax.swing.JButton jButtonAgregar;
    private javax.swing.JButton jButtonConfirmar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonVolver;
    private javax.swing.JScrollPane jScrollPaneProductos;
    private javax.swing.JTable jTableVentas;
    private javax.swing.JLabel lblFechaVenta;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblTotalVenta;
    private javax.swing.JPanel pnlFondo;
    private javax.swing.JPanel pnlTitulo;
    // End of variables declaration//GEN-END:variables

}
